<!-- A template for editing a course
Contains its year structures in the format of cards
Also contains fields which corresponds to a particular course's attributes


Toolbox partial takes several locals. Each helps in specifying format of how a form is exported for this type form.
Can easily be adjusted to preference. I.e to remove a attribute from resulting export, add to the attribute name
to the blacklist_attributes string.
Note: Both blacklist and entity attributes are strings when each attribute is seperated by
comma. This is show it can be passed to javascript to be used
-->

<% provide :title, "Edit #{Course.find(params[:id]).name}" %>
<% provide :submit_button_text, 'Update' %>


<header class="header">
  <h1 ><%= content_for(:title) %></h1>
  <div class="header__actions">
    <!--toolbox-->
    <%= render(:partial => 'admin/application/edit_toolbox_buttons',
               :locals => {:object => Course.find(params[:id]),
                           :name_of_file=>Course.find(params[:id]).name.to_s,
                           :blacklist_attributes=>"",:entity_attributes=>"",
                           :has_many_attributes=>["uni_modules"],
                 :back_button => false })%>
    <!--back button-->
    <%= link_to "<i class='fa fa-angle-left' aria-hidden='true'></i>&nbsp;&nbsp;Back".html_safe,
                admin_courses_path, class: "button tool-box", style: "padding-top: 11px;padding-bottom: 11px;" %>
  </div>
</header>


<!--render of fields which relate to a course's attributes-->
<%= render 'form',:action =>"Update" %>
