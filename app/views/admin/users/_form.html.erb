<%#
# Form Partial

This partial is rendered on a resource's `new` and `edit` pages,
and renders all form fields for a resource's editable attributes.


%>

<!--Note to anyone who wants to modify this form: There exists a for loop which renders all the attributes
related to that model. current_field_name intialized within for loop returns field name. Have a if
statement that compares the current field name with a value and do the associated behaviour
with respect to that related field-->



<%= form_for([namespace, page.resource], html: {class: "form"}) do |f| %>
    <!--Helper which prints error message of current object if there is any on to screen(does nothing, if none)-->
    <%= error_messages_for(page.resource) %>

    <!--iterate through each attribute-->
    <% page.attributes.each do |attribute| -%>
        <% current_field_name = attribute.attribute.to_s %>
        <% case current_field_name %>
        <% when "password" %>
            <% if is_edit_form(params) %>
                <a onclick="openPasswordFields();" class=" form-actions password-show-toggle">Change password</a>
              <% class_to_add = "password-hidden" %>
            <%end%>
        <% when "password_confirmation" %>
            <% if is_edit_form(params) %>
                <% class_to_add = "password-hidden" %>
                <%end%>
        <% when "user_level" %>
            <% class_to_add = "faculty-field" %>
        <% when "course" %>

            <% if is_edit_form(params)&&!check_user_level(params[:id],1) %>
            <div class="page-header">
              <h3>Additional information</h3>
            </div>
                <%end%>
            <% to_hide = (!is_edit_form(params) || (is_edit_form(params) && check_user_level(params[:id],3)))? "":"hide-content"%>
            <% class_to_add = "faculty-field "+to_hide %>
        <% when "year_of_study" %>
            <% to_hide = (!is_edit_form(params) || (is_edit_form(params) && check_user_level(params[:id],3)))? "":"hide-content"%>
            <% class_to_add = "faculty-field "+to_hide %>
        <% when "departments" %>
            <% to_hide = !is_edit_form(params) || (is_edit_form(params) && !check_user_level(params[:id],1))? "":"hide-content"%>
            <% class_to_add = "faculty-field "+to_hide %>
        <% when "faculty" %>
            <% class_to_add = "faculty-field hide-content" %>
        <% end %>


        <div class="row field-unit field-unit--<%= attribute.html_class %> <%= class_to_add %>">
          <div class="col-xs-12">
            <%= render_field attribute, f: f %>
          </div>
        </div>
    <% end -%>

    <div class="form-actions"><%= f.submit %></div>
<% end %>



<script>

    var isClickedForNewStruc = false;
    var openPasswordFields = function () {
        $(".password-hidden").slideToggle("slow");
        $(".password-show-toggle").text($(".password-show-toggle").text()=="Change password"?"Close panel":"Change password");
    }

    var createInstruction = function(field_name,instruction){
        var html = '<span class="instruction-label form-actions">'+instruction+'</span>' ;
        var label = $("[for*='" + field_name + "']");
        label.css("margin","0px");
        $("[for*='" + field_name + "']").parent().after(html);
    }

    $(document).ready(function () {
        var $select = $('.faculty-field select').selectize();
        createInstruction("user_level","*Warning: Super admin access gives unbound access to modify, create and delete");
        createInstruction("faculty","*If entered, departments will automatically be infered from the course");

    });





    var addInsToField = function(input_instruction){

    }
</script>