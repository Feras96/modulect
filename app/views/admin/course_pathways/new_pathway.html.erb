<% provide :title, "New Pathway for #{Course.find(params[:id]).name}" %>
<% provide :submit_button_text, 'Update' %>

<header class="header">
  <h1 class="header__heading"><%= content_for(:title) %></h1>
  <div class="header__actions">
  </div>
</header>

<div id="main-container">
</div>



<script type="text/javascript">
var data = '<%=raw (@course.to_json(
:include => {:year_structures => {:include => {:groups => {:include => {:uni_modules => {:include => :uni_modules}}}}}}
      ).gsub(/["]/, '\\"')) %>';
var js_course = jQuery.parseJSON(data);
var optional_modules_per_year = [];
var selected_ids = [];
updateOptionalModules(); 
updateSelectedModules();

console.log(optional_modules_per_year);
console.log(selected_ids);

function updateOptionalModules(){
// Go through each year structure
	for(year = 0; year < js_course.year_structures.length; ++year) {
	  optional_modules_this_year = [];
	  // Sort the moduels for this year into compuslory and non-compulsory
	  for(group= 0; group < js_course.year_structures[year].groups.length; ++group) {
	    // If a group is marked as compulsory add its module to the required group modules array. If not add it to the optional array.
	    currentGroup = js_course.year_structures[year].groups[group];
	    if(!currentGroup.compulsory) {
	      optional_modules_this_year.push(currentGroup);
	    }
	  }

	  // Add the data for this year into the array for all years
	  optional_modules_per_year.push(optional_modules_this_year);
	}
}

function updateSelectedModules(){
	for(year = 0; year < optional_modules_per_year.length; ++year) {
		selected_ids.push([]);
		for(group = 0; group < optional_modules_per_year[year].length; ++group) {
	    	selected_ids[year].push([]);
		}
	}
}

function toggle(year, group, module){
	mod = optional_modules_per_year[year][group].uni_modules[module];
	if(selected_ids[year][group].includes(mod.id)){
		console.log("removed " + mod.name);
		selected_ids[year][group].splice(selected_ids[year][group].indexOf(mod.id),1);		
		$('#i-' + year + '-' + group + '-' + module).attr('class', 'fa-li fa fa-square-o');
	}else{
		console.log("added " + mod.name);
		selected_ids[year][group].push(mod.id);
		$('#i-' + year + '-' + group + '-' + module).attr('class', 'fa-li fa fa-check-square-o');
	}
}

out = "";
for(y=0; y<optional_modules_per_year.length; y++){
	out+="<h3>Year " + (y+1) + "</h3>";
	for(g=0; g<optional_modules_per_year[y].length; g++){
		out+="<b>" + optional_modules_per_year[y][g].name + "</b><br/>";
		out+='<ul class="fa-ul">';
		for(m=0; m<optional_modules_per_year[y][g].uni_modules.length; m++){
			out+='<li id="li-' + y + '-' + g + '-' + m + '" onclick="toggle(' + y + ',' + g + ',' + m + ')"><i id="i-' + y + '-' + g + '-' + m + '" class="fa-li fa fa-square-o"></i>';
			out+=optional_modules_per_year[y][g].uni_modules[m].name;
			out+='</li>'
		}
		out+='</ul>';
	}
}
document.getElementById("main-container").innerHTML = out;

function updateView(){

}

</script>