<%#
   This page is reslts stage of the pathway search whereby a user can see the resulting pathway options from their search.
%>
<% provide(:title, 'Pathway Results') %>
<% if request.query_parameters["sl"].present? && request.query_parameters["sl"] == "true"%>
  <% add_to_search_log("pathway") %>
<% end %>
<style>
 @media print {
  .navbar, .no-print, footer, .no-print * {display:none; !important}
}
</style>
<div class="banner" style="padding-top:40px;">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <h1>Pathway Search</h1>
      </div>
    </div>
  </div>
</div>
<div id="white-strip-pathway">
  <div class="container no-print">
    <div class="col-md-12 col-md-offset-1">
      <div class="row">
        <div class="col-md-4 step">
          <div class="numberCircle">1</div> My Details
        </div>
        <div class="col-md-4 step">
          <div class="numberCircle">2</div> Choose Interests &amp; Careers
        </div>
        <div class="col-md-4 step current">
          <div class="numberCircle current-circle">3</div> Results and selection
        </div>
      </div>
    </div>
  </div>
</div>
<div id="page" style="padding-top:30px;">
  <div class="container">
    <div class="col-md-10 login-card col-md-offset-1">
      <div id = "log"></div>
      <div class="col-md-12">
        <div class="row">
          <h1> Time to start picking your modules </h1>
          <h4> We've added compulsory modules for you. Just click pick a module and go through the different groups of modules available. </h4>
          <% if @suggested_pathways.length > 0 %>
            <h4> This course has 
            <%= @suggested_pathways.length %> suggested pathway<% if(@suggested_pathways.length>1)%>s<%end%>:
            </h4>
            <ul style="margin-bottom:20px;">
              <% @suggested_pathways.each do |good_path| %>
                <li><a href="/pathway-search/view_results?year=<%=@year_of_study%>&course=<%=@course_obj.id%>&selected=<%=good_path.data%>"><%= good_path.name %></a></li>
              <% end %>
            </ul>
          <% end %>
          <h5> Don't forget that we've given you a tag match percentage to show you how much a module matches your interests and aspirations. </h5>
        </div>
        <% if @course_obj.year_structures.length != 0 %>
        <div class="row">
        <%  @course_obj.year_structures.each do |y| %> 
          <button id=<%= "btn_year_#{y.read_attribute_before_type_cast('year_of_study')}" %> class="btn btn-lg btn-block" type="button" style="margin-top: 5px">
            <%= y.year_of_study_before_type_cast.to_i.ordinalize %> Year&nbsp;&nbsp;<i class="fa fa-angle-down" aria-hidden="true"></i>
          </button>
          <div id=<%= "div_year_#{y.read_attribute_before_type_cast('year_of_study')}" %> style="margin-top: 20px">
          </div>
          <div class="modal fade" id="optionsModalYear<%= y.year_of_study_before_type_cast.to_i %>" tabindex="-1" role="dialog" aria-hidden="true" style="margin-top: 50px">
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-header" id="optionsModalHeaderYear<%= y.year_of_study_before_type_cast.to_i %>">
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                  <h2 class="modal-title" id="exampleModalLabel">Select a Module:</h2>
                </div>
                <div class="modal-body" id="optionsModalBodyYear<%= y.year_of_study_before_type_cast.to_i %>">
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
              </div>
            </div>
          </div>
        <% end %>
        <button id="btn_all_years" class="btn btn-lg btn-block no-print" type="button" style="margin-top: 5px">show all</button>
        </div>
        <div class="row" <% if logged_in? %>style="margin-left:-30px;"<% end %>>
          <% if logged_in? %>
          <form onsubmit="savePathway();return false;" style="margin-top: 30px">
            <div class="col-md-5">
              <input type="text" class="form-control no-print" id="save-name" placeholder="Name your Pathway" required>
            </div>
            <div class="col-md-3">
              <button type="submit" class="btn btn-lg no-print" id="save"><span><i class="fa fa-star-o" aria-hidden="true"></i>&nbsp;&nbsp;Save Pathway</span>
              </button>
            </div>
          </form>
          <% else %>
          <form action="/login" method="get" style="margin-top:30px;">
            <button type="submit" class="btn btn-lg btn-disabled save-button no-print" data-toggle="tooltip" data-placement="right" title="To save modules, you must be logged in."><span><i class="fa fa-star-o" aria-hidden="true"></i>&nbsp;&nbsp;Save Pathway</span>
            </button>
          </form>
          <% end %>
        </div>
        <div class="row nomobile" style="margin-top:-20px;margin-bottom:10px;">
          <div class="col-md-12 text-right">
            <ul class="results-page-options">
              <li><a id="print" href="javascript:void()"><i class="fa fa-print" aria-hidden="true"></i>&nbsp;&nbsp;Print page</a></li>
              <li><a id="mailto" href="mailto:?subject=Modulect | Please check my modules&body=Hello {Insert name},%0A%0AI used KCL Modulect to view which optional modules I should take in order to reach my career goals. Please take a look at this link:%0A%0A
                <%= request.original_url.gsub("&", "%26") %>
                %0A%0A
                Regards,%0A
                {Insert name}" target="_blank"><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;Send via Email</a> </li>
            </ul>
          </div>
        </div>
        <% else %>
        <div class="row" style="margin-top: 20px">
          <div class="col-md-12" style="text-align: center;">
            <h3> Sorry, there was a problem loading this course.</h2>
            <h3> Please try again later. </h2>
          </div>
        </div>
        <% end %> 
      <div class="form-group" style="margin-top: 30px">
        <a href="javascript:void()" onclick="javascript:history.back()" >< Back to previous page</a>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">

  // get JSON object from rails
  var data = '<%=raw (@course_obj.to_json(
    :include => {:year_structures => {:include => {:groups => {:include => {:uni_modules => {:except => :description, :include => { :uni_modules => {:except => :description}}}}}}}}
          ).gsub(/["]/, '\\"')) %>';
  var js_course = jQuery.parseJSON(data);

  // globals to keep track of selected modules
  //var selected_modules_per_year = <%= @selected %>;
  var required_modules_per_year = [];
  var optional_modules_per_year = [];
  var selected_ids = <%= @selected %>;

  var btns = [];
  var divs = [];
  for(i=1; i<10; i++){
    var btn = document.getElementById("btn_year_"+i);
    var div = document.getElementById("div_year_"+i);
    if(!btn) break;
    else{
      $(div).hide();
      total_years = i;
      divs.push(div);
      btns.push(btn);
    }

  }
  for(var i=0; i<btns.length; i++){
    (function(_i){
      $(btns[_i]).click(function () {
        showYear(divs, _i);
      });
    })(i);
  }
  $("#btn_all_years").click(function () {
    for(i=0; i<divs.length; i++){
      $(divs[i]).slideDown();
    }
  });

  $("#mailto").click(function() {
    document.getElementById("mailto").setAttribute("href", "mailto:?subject=Modulect | Please check my modules&body=Hello {Insert name},%0A%0AI used KCL Modulect to view which optional modules I should take in order to reach my career goals. Please take a look at this link:%0A%0A" +
      "<%= request.original_url.gsub("&", "%26") %>" + "%26selected=" + JSON.stringify(selected_modules_per_year) +
      "%0A%0A" +
      "Regards,%0A" +
      "{Insert name}");
  });

  $("#print").click(function(e) {
    for(i=0; i<divs.length; i++){
      $(divs[i]).slideDown(0);
    }
    window.print();
  });

  function courseworkCompare(a, b) {
    if(a.coursework_percentage < b.coursework_percentage) {
      return -1;
    }
    if(a.coursework_percentage > b.coursework_percentage) {
      return 1;
    }
    return 0;
  }

  function examCompare(a, b) {
    if(a.exam_percentage < b.exam_percentage) {
      return -1;
    }
    if(a.exam_percentage > b.exam_percentage) {
      return 1;
    }
    return 0;
  }

  function passRateCompare(a, b) {
    if(a.pass_rate < b.pass_rate) {
      return -1;
    }
    if(a.pass_rate > b.pass_rate) {
      return 1;
    }
    return 0;
  }

  function ratingCompare(a, b) {
    aRating = 0;
    bRating = 0;
    $.ajax({
      url: '<%= application_rating_for_module_path %>',
      type: 'GET',
      data: {
        mod: a.id
      },
      success: function(data, event, status, xhr) {
        aRating = response
      },
    }); 
    $.ajax({
      url: '<%= application_rating_for_module_path %>',
      type: 'GET',
      data: {
        mod: b.id
      },
      success: function(data, event, status, xhr) {
        bRating = response
      },
    });

    if(aRating < bRating) {
      return -1;
    }
    if(aRating > bRating) {
      return 1;
    }
    return 0;
  }


  function sort(year, group) {
    var select = document.getElementById("sort_by");
    var selected = select.options[select.selectedIndex].value;

    if(selected == "tags") {
      module_results = <%= raw @results.to_json%>;
      return optional_button_pressed(year, group, true, "tags");
    }
    else if(selected == "coursework") {
      optional_modules_per_year[year][group].uni_modules.sort(courseworkCompare);
      return optional_button_pressed(year, group, false, "coursework");
    }
    else if(selected == "exam") {
      optional_modules_per_year[year][group].uni_modules.sort(examCompare);
      return optional_button_pressed(year, group, false, "exam");
    }
    else if(selected == "pass") {
      optional_modules_per_year[year][group].uni_modules.sort(passRateCompare);
      return optional_button_pressed(year, group, false, "pass");
    }
    else if(selected == "rating") {
      optional_modules_per_year[year][group].uni_modules.sort(ratingCompare);
      return optional_button_pressed(year, group, false, "rating");
    }

  }

  function updateResultLink() {
    if(window.location.href.includes("&selected")) {
      clearedLink = (window.location.href).substring(0, (window.location.href).indexOf("&selected"));
      window.history.replaceState({}, "Pathway Results | Modulect", clearedLink + "&selected=" + JSON.stringify(selected_ids));
    } else {
      window.history.replaceState({}, "Pathway Results | Modulect", window.location.href + "&selected=" + JSON.stringify(selected_ids));
    }
  }

  function savePathway() {
    $.ajax({
        type: "POST",
        url: "<%= application_save_pathway_path %>",
        data: {
            name: document.getElementById('save-name').value,
            data: JSON.stringify(selected_ids),
            year: <%= @year_of_study.to_i %>,
            course: <%= @course.to_i %>
        }
    })
    document.getElementById("save").innerHTML= "<span><i class=\"fa fa-star\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Saved</span>";     
  }

  module_results = <%= raw @results.to_json%>;
  updateData(); 
  creditsComplete = [];
  groupComplete = [];

  // Store prerequistes for quick deletions
  var preReqMap = {};

  // Initialise selected array, credits array and groups credit array
  if(selected_ids.length == 0) {
    for(year = 0; year < optional_modules_per_year.length; ++year) {
      selected_ids.push([]);
      groupComplete.push([]);
      creditsComplete[year] = false;
      for(group = 0; group < optional_modules_per_year[year].length; ++group) {
        selected_ids[year].push([]);
        groupComplete[year][group] = false;
      }
    }
  } else {
    for(year = 0; year < optional_modules_per_year.length; ++year) {
      groupComplete.push([]);
      creditsComplete[year] = false;
      for(group = 0; group < optional_modules_per_year[year].length; ++group) {
        groupComplete[year][group] = false;
        for(entry = 0; entry < selected_ids[year][group].length; ++entry) {
          module_id = selected_ids[year][group][entry];
          // Check prerequisites for selected modules
          for(i = 0; i < optional_modules_per_year[year][group].uni_modules.length; ++i) {
            var currentMod = optional_modules_per_year[year][group].uni_modules[i];
            if(currentMod.id == module_id) {
              checkPreReq(currentMod, year, group);
              break;
            }
          }
        }
      }
    }
  }

  updateUI();

  // show and hide year div
  function showYear(divs, year){
    for(i=0; i<divs.length; i++){
      if(i!=year) $(divs[i]).slideUp();
    }
    $(divs[year]).slideDown();
  }

  function colour_code_card_group(module_matches, search_tags) {
    if((module_matches.length / search_tags.length) > <%= app_settings.tag_percentage_match / 100 %>) {
      return "green"
    } else {
      return "orange"
    }
  }


  function create_module_card(module, isOptional, year, group, gName, modIndex) {
    var result = module_results.filter(function(mod) {
      if(mod[0].id == module.id){
        return mod;
      }
    });
    if(!isOptional) {
      var moduleCard = "<div class=\"row login-card res-card result-card-blue res-btn\" id=\"" + module.id + "\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"This is a compulsory module.\">" +
        "<div class=\"col-md-8\" >" +
          "<p>" + module.code + "</p>" +
          "<p>" + module.name + "</p>" +
        "</div>" +
         "<div class=\"col-md-1\" style=\"font-size: 18px; float: right; padding-top: 15px\">" +
            "<a class=\"no-print\" href=\"/uni_modules/" + module.id + "\" onclick= \"return updateResultLink()\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></a>" +
          "</div>" +
         "<div class=\"col-md-3 tag-match-figure\" style=\"font-size:18px; padding-left: 0px\">" +
          "<h4> Compulsory </h4>" +
        "</div>" +
      "</div>"
      return moduleCard;
    }

    if(result.length > 0) {
      var tagsmatched = result[0][1];
      var moduleCard =  "<div class=\"row login-card res-card result-card-" + colour_code_card_group(tagsmatched, <%= raw @chosen_tags %>) +  " res-btn\" id=\"" + module.id + "\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"Tags Matched: " + tagsmatched.join(", ") + "\">" +
        "<div class=\"col-md-8\">" +
          "<p>" +  module.code + "</p>" +
          "<p>" + module.name + "</p>" +
        "</div>" +
        "<div class=\"col-md-1\" style=\"font-size: 18px; float: right; padding-top: 15px\">" +
          "<a class=\"no-print\" href=\"/uni_modules/" + module.id + "\" onclick= \"return updateResultLink()\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></a>";
           if(isOptional) {
            moduleCard += "<a class=\"deselect\" onclick = \"deselectModule(" + year + ", " + group + ", " + module.id + ", true)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>";
          }
          moduleCard += "</div>" +
        "<div class=\"col-md-3 tag-match-figure\" style=\"font-size:18px; padding-left: 0px\">" +
          "<h4>" + Math.round((tagsmatched.length / <%= raw @chosen_tags %>.length) * 100) + " %</h4>" +
        "</div>" +
      "</div>"
      return moduleCard;
    } else {
      var moduleCard = "<div class=\"row login-card res-card result-card-orange res-btn\" id=\"" + module.id + "\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"No tags matched.\">" +
        "<div class=\"col-md-8\">" +
          "<p>" +  module.code + "</p>" +
          "<p>" + module.name + "</p>" +
        "</div>" +
         "<div class=\"col-md-1\" style=\"font-size: 18px; float: right; padding-top: 15px\">" +
          "<a class=\"no-print\" href=\"/uni_modules/" + module.id + "\" onclick= \"return updateResultLink()\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></a>";
          if(isOptional) {
            moduleCard += "<a class=\"deselect\" onclick = \"deselectModule(" + year + ", " + group + ", " + module.id + ", true)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>";
          }
          moduleCard += "</div>" +
         "<div class=\"col-md-3 tag-match-figure\" style=\"font-size:18px; padding-left: 0px\">" +
          "<h4> 0% </h4>" +
        "</div>" +
      "</div>"
      return moduleCard;
    }
  }

  function create_blank_cell(year) {
    return "<button type=\"button\" class=\"row login-card res-card res-btn\" data-toggle=\"modal\" data-target=\"#optionsModalYear" + year + "\">" +
        "<div class=\"col-md-12\" style=\"font-size: 18px; text-align: center\">" +
          "<p> + Pick a Module </p>" +
        "</div>" +
      "</button>"
  }


  function updateUI(){
    for(year = 0; year < js_course.year_structures.length; year++) {
      // Go through all the modules which have been selected and categories them by their semester
      selected_modules_any_semester = [];
      selected_modules_first_semester = [];
      selected_modules_second_semester = [];
      selected_modules_year_long = [];
      for(group = 0; group < optional_modules_per_year[year].length; ++group) {
        if(selected_ids[year].length == 0) {
          break;
        }
        for(index = 0; index < selected_ids[year][group].length; ++index) {
          if(selected_ids[year][group].length == 0) {
            break;
          }
          var findWithId = selected_ids[year][group][index];
          var semester = -1;
          var sel_module = [];
          for(item = 0; item < optional_modules_per_year[year][group].uni_modules.length; ++item) {
            var currentItem = optional_modules_per_year[year][group].uni_modules[item];
            if(currentItem.id == findWithId) {
              semester = currentItem.semester;
              // Create an array which stores the module, year, group
              sel_module = [currentItem, year, group];
              break;
            }
          }
          if(semester == 0) selected_modules_any_semester.push(sel_module);
          else if(semester == 1) selected_modules_first_semester.push(sel_module);
          else if(semester == 2) selected_modules_second_semester.push(sel_module);
          else if(semester == 3) selected_modules_year_long.push(sel_module);
          else if(semester == -1) console.log("ERROR");
        }
      }

      // Check that the table creates enough slots
      numberOfModulesSoFar = selected_modules_any_semester.length + selected_modules_first_semester.length + selected_modules_second_semester.length + selected_modules_year_long.length + required_modules_per_year[year][3] + required_modules_per_year[year][2] + required_modules_per_year[year][1] + required_modules_per_year[year][0];
      rows = (js_course.year_structures[year].year_credits / 15) / 2;
      if(numberOfModulesSoFar >= rows * 2 && !creditsComplete[year]) {
        rows = rows + Math.ceil(((rows * 2) - numberOfModulesSoFar) / 2) + 1;
      } else if(numberOfModulesSoFar >= rows * 2 && creditsComplete[year]) {
        rows = rows + Math.ceil(((rows * 2) - numberOfModulesSoFar) / 2);
      }

      // Create table with columns for Semester 1 and 2
      targetDiv = document.getElementById("div_year_" + (year+1));
      myTable = "<table id =\"results_table_" + year + "\" style=\"width: 100%\"><tr><th>Semester 1</th><th>Semester 2</th></tr>";
      s1 = 0; // keeping track of column positions
      s2 = 0;

      for(i = s1; i < rows; ++i) { // Create blank cells 
        myTable +="<tr><td>" + create_blank_cell(year + 1) + "</td><td>" + create_blank_cell(year + 1) + "</td></tr>";
      }

      myTable += "</table>";      
      targetDiv.innerHTML = myTable;

      myTableOnPage = document.getElementById('results_table_'+year);

      // Fill in year long modules first. Note: required modules are in index 3 of required_modules_per_year.
      for(i = 0; i < required_modules_per_year[year][3].length; ++i) {
        myTableOnPage += "<tr><td colspan=2>" + create_module_card(required_modules_per_year[year][3][i], false, 0, 0, 0) + "</td></tr>";
        s1++;
        s2++;
      }
      for(i = 0; i < selected_modules_year_long.length; ++i) {
        myTableOnPage += "<tr><td colspan=2>" + create_module_card(selected_modules_year_long[i][0], true, selected_modules_year_long[i][1], selected_modules_year_long[i][2], selected_modules_year_long[i][3]) + "</td></tr>";
        s1++;
        s2++;
      }

      // Fill in modules in 1st semester. Note: required modules are in index 1 of required_modules_per_year
      for(i = 0; i < required_modules_per_year[year][1].length; ++i) {
        myTableOnPage.rows[s1++].cells[0].innerHTML = create_module_card(required_modules_per_year[year][1][i], false, 0, 0, 0);
      }
      for(i = 0; i < selected_modules_first_semester.length; ++i) {
        myTableOnPage.rows[s1++].cells[0].innerHTML = create_module_card(selected_modules_first_semester[i][0], true, selected_modules_first_semester[i][1], selected_modules_first_semester[i][2], selected_modules_first_semester[i][3]);
      }

      // Fill in modules in 2nd semester, Note: required modules are in index 2 of required_modules_per_year
      for(i = 0; i < required_modules_per_year[year][2].length; ++i) {
        myTableOnPage.rows[s2++].cells[1].innerHTML = create_module_card(required_modules_per_year[year][2][i], false, 0, 0, 0);
      }
      for(i = 0; i < selected_modules_second_semester.length; ++i) {
        myTableOnPage.rows[s2++].cells[1].innerHTML = create_module_card(selected_modules_second_semester[i][0], true, selected_modules_second_semester[i][1], selected_modules_second_semester[i][2], selected_modules_second_semester[i][3]);
      }

      // Fill in modules in any semester, Note: required modules are in index 0 of required_modules_per_year
      for(i = 0; i < required_modules_per_year[year][3].length; ++i) {
        if(s2 < s1) {
          myTableOnPage.rows[s2++].cells[1].innerHTML = create_module_card(required_modules_per_year[year][0][i], false, 0, 0, 0);
        } else {
          myTableOnPage.rows[s1++].cells[0].innerHTML = create_module_card(required_modules_per_year[year][0][i], false, 0, 0, 0);
        }
      }
      for(i = 0; i < selected_modules_any_semester.length; ++i){
        if(s2 < s1) {
          myTableOnPage.rows[s2+1].cells[1].innerHTML = create_module_card(selected_modules_any_semester[i][0], true, selected_modules_any_semester[i][1], selected_modules_any_semester[i][2], selected_modules_any_semester[i][3]);
          s2++;
        } else {
          myTableOnPage.rows[s1+1].cells[0].innerHTML = create_module_card(selected_modules_any_semester[i][0], true, selected_modules_any_semester[i][1], selected_modules_any_semester[i][2], selected_modules_any_semester[i][3]);
          s1++;
        }
      }

      // generate optional modules buttons
      modalTarget = document.getElementById("optionsModalBodyYear" + (year + 1));
      modalTarget.innerHTML = "";
      nav = "<div id=\"pathway-tabs\"><ul class=\"nav nav-tabs\">";
      for(i = 0; i < optional_modules_per_year[year].length; ++i) {  
        if(optional_modules_per_year[year][i].uni_modules) {
          out = "<li><a role=\"tab\" data-toggle=\"tab\" id = \"btn_opt_year_"+year+"_group_"+i+"\">" + optional_modules_per_year[year][i].name;
          if(groupComplete[year][i]) {
            out += "&nbsp;&nbsp;<span style=\"color: #2ab27b\"><i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> - Done</span>";
          } 
          out += "</a></li>";
          nav += out;
        }
      }
      nav += "</ul></div><div class=\"tab-pane fade in active col-md-12\" id = \"div_opt_year_" + year + "\" style=\"padding-top: 20px\"></div>";
      modalTarget.innerHTML += nav;

      // For each button add a event listener which shows a modal sorted by tags by default
      for(i = 0; i < optional_modules_per_year[year].length; ++i) {
        if(optional_modules_per_year[year][i].uni_modules) {
          (function(_year, _i){
          button = document.getElementById("btn_opt_year_" + _year + "_group_" + _i);
          button.addEventListener("click", function(){
            optional_button_pressed(_year, _i, true, "tags");
          });
          })(year, i);  

        }
      }

    }
  }

  // Shows the modal with the optional modules which the user selected from
  function optional_button_pressed(_year, _i, useTags, sortby) {
    // Show the sorting options
    target = document.getElementById("div_opt_year_" + _year);
    target.innerHTML = "";
    target.innerHTML += "<div class=\"row\"><span style=\"margin-bottom: 20px; display:inline-block;\" class=\"sort-area\">" +
                  <% sorting_options = {"tags" => "Tag match", "coursework" => "Coursework weighting", "exam" => "Exam weighting", "pass" => "Pass rate", "rating" => "Module Rating"} %>
                  "Sort by: &nbsp;&nbsp;" +
                    " <select class=\"selectpicker\" id=\"sort_by\" style=\"display:inline-block !important;\" onchange=\"sort(" + _year + "," + _i + ")\">" +
                      <% sorting_options.each do |option| %>
                        "<option value=\"<%= option.first %>\"" +
                         " >" +
                        "<%= option.second %>" +
                        "</option>" +
                      <% end %>
                    "</select>" +
                  "</span></div>";

    $('.selectpicker').selectpicker();
    // Sort the optional modules by their tags matched percentage
    var addedModules = [];
    for(i = 0; i < optional_modules_per_year[_year][_i].uni_modules.length; ++i) {
      uni_mod = optional_modules_per_year[_year][_i].uni_modules[i];
      var result = module_results.filter(function(mod) {
        if(mod[0].id == uni_mod.id){
          return mod;
        }
      });
      if(result.length > 0 && useTags) {
        var tagsmatched = result[0][1];
        moduleCard = "<div class =\"row\">" +
                              "<button type=\"button\" class=\"login-card res-card result-card-" + colour_code_card_group(tagsmatched, <%= raw @chosen_tags %>) +  " res-btn\" id =\"btn_opt_select_" + uni_mod.id +"\" style=\"text-align: left\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Tags Matched: " + tagsmatched.join(", ") + "\"";
                                  if(selected_ids[_year][_i].indexOf(uni_mod.id) > -1) {
                                    moduleCard += " disabled ";
                                  }
                                moduleCard += ">" +
                                "<div class=\"col-md-8\" style\"width: 75%\">" +
                                  "<p>" +  uni_mod.code + "</p>" +
                                  "<p>" + uni_mod.name + "</p>" +

                                "</div>" +
                                "<div class=\"col-md-1\" style=\"font-size: 18px; float: right\">" +
                                  "<a class=\"no-print\" href=\"/uni_modules/" + uni_mod.id + "\" onclick= \"return updateResultLink()\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></a>";
                                  if(selected_ids[_year][_i].indexOf(uni_mod.id) > -1) {
                                    moduleCard += "<a class=\"deselect\" onclick = \"deselectModule(" + _year + ", " + _i + ", " + uni_mod.id + ", true)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>";
                                  }
                                moduleCard += "</div>" +
                                "<div class=\"col-md-3 tag-match-figure\" style=\"font-size:18px; padding-left: 0px\">" +
                                  "<h4>" + Math.round((tagsmatched.length / <%= raw @chosen_tags %>.length) * 100) + " %</h4>" +        
                                "</div>"
                              "</button>" +
                            "</div>";
        target.innerHTML += moduleCard;
        addedModules.push(uni_mod);
      }
    }
    for(i = 0; i < optional_modules_per_year[_year][_i].uni_modules.length; ++i) {
      uni_mod = optional_modules_per_year[_year][_i].uni_modules[i];
       var foundAlready = addedModules.filter(function(mod) {
        if(mod.id == uni_mod.id){
          return mod;
        }
      });
      var result = [];
      var hasTags = [];
      if(foundAlready.length == 0) {
        if(!useTags) {
          var hasTags = module_results.filter(function(mod) {
            if(mod[0].id == uni_mod.id) {
              return mod;
            }
          });
        }
        if(hasTags.length > 0) {
          var tagsmatched = hasTags[0][1];
          moduleCard = "<div class =\"row\">" +
                              "<button type=\"button\" class=\"login-card res-card result-card-" + colour_code_card_group(tagsmatched, <%= raw @chosen_tags %>) +  " res-btn\" id =\"btn_opt_select_" + uni_mod.id +"\" style=\"text-align: left\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Tags Matched: " + tagsmatched.join(", ") + "\"";
                                  if(selected_ids[_year][_i].indexOf(uni_mod.id) > -1) {
                                    moduleCard += " disabled ";
                                  }
                                moduleCard += ">" +
                                "<div class=\"col-md-8\" style\"width: 75%\">" +
                                  "<p>" +  uni_mod.code + "</p>" +
                                  "<p>" + uni_mod.name + "</p>" +

                                "</div>" +
                                "<div class=\"col-md-1\" style=\"font-size: 18px; float: right\">" +
                                  "<a class=\"no-print\" href=\"/uni_modules/" + uni_mod.id + "\" onclick= \"return updateResultLink()\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></a>";
                                  if(selected_ids[_year][_i].indexOf(uni_mod.id) > -1) {
                                    moduleCard += "<a class=\"deselect\" onclick = \"deselectModule(" + _year + ", " + _i + ", " + uni_mod.id + ", true)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>";
                                  }
                                moduleCard += "</div>" +
                                "<div class=\"col-md-3 tag-match-figure\" style=\"font-size:18px; padding-left: 0px\">" +
                                  "<h4>" + Math.round((tagsmatched.length / <%= raw @chosen_tags %>.length) * 100) + " %</h4>" +        
                                "</div>"
                              "</button>" +
                            "</div>"; 
        } else {
          moduleCard = "<div class =\"row\">" +
                              "<button type=\"button\" class=\"login-card res-card result-card-orange res-btn\" id =\"btn_opt_select_" + uni_mod.id +"\" style=\"text-align: left\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"No tags matched.\"";
                                if(selected_ids[_year][_i].indexOf(uni_mod.id) > -1) {
                                    moduleCard += " disabled ";
                                  }
                                moduleCard += ">" +
                                "<div class=\"col-md-8\" style\"width: 75%\">" +
                                  "<p>" +  uni_mod.code + "</p>" +
                                  "<p>" + uni_mod.name + "</p>" +
                                "</div>" +
                                "<div class=\"col-md-1\" style=\"font-size: 18px; float: right\">" +
                                  "<a class=\"no-print\" href=\"/uni_modules/" + uni_mod.id + "\" onclick= \"return updateResultLink()\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></a>";
                                  if(selected_ids[_year][_i].indexOf(uni_mod.id) > -1) {
                                    moduleCard += "<a class=\"deselect\" onclick = \"deselectModule(" + _year + ", " + _i + ", " + uni_mod.id + ", true)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>";
                                  } 
                                 moduleCard += "</div>" +
                                "<div class=\"col-md-3 tag-match-figure\" style=\"font-size:18px; padding-left: 0px\">" +
                                  "<h4> 0% </h4>" +
                                "</div>"
                              "</button>" +
                            "</div>";
        }
        target.innerHTML += moduleCard;
      }
    }

    $(function () {
      $('[data-toggle="tooltip"]').tooltip();
    });

    var selecter = document.getElementById("sort_by");
    selecter.value = sortby;

    // Add an event listener to each module button which triggers a select on the module, also starts the check on the module.
    for(i = 0; i < optional_modules_per_year[_year][_i].uni_modules.length; ++i) {
      currentModId = optional_modules_per_year[_year][_i].uni_modules[i].id;
      if(!(selected_ids[_year][_i].indexOf(currentModId) > -1)) {
        (function(_year_, _i, currentModId){
          button = document.getElementById("btn_opt_select_" + currentModId);
          button.addEventListener("click", function(){
            selectModule(_year_,_i,currentModId);
          });
        })(_year, _i, currentModId);
      }
    }
  }

  function selectModule(year, group, module_id) {
    this_module = null;
    for(i = 0; i < optional_modules_per_year[year][group].uni_modules.length; ++i) {
      var currentMod = optional_modules_per_year[year][group].uni_modules[i];
      if(currentMod.id == module_id) {
        this_module = currentMod;
        break;
      }
    }

    // Check that the module selected is able to be chosen

    // 1. Make sure we don't go over max modules or credits per group
    max_credits = optional_modules_per_year[year][group].max_credits;
    min_credits = optional_modules_per_year[year][group].min_credits;
    credits_used = 0;
    modules_selected_from_group = selected_ids[year][group].length;
    for(item = 0; item < selected_ids[year][group].length; ++item) {
      var findWithId = selected_ids[year][group][item];
        for(i = 0; i < optional_modules_per_year[year][group].uni_modules.length; ++i) {
          var currentMod = optional_modules_per_year[year][group].uni_modules[i];
          if(currentMod.id == findWithId) {
            credits_used += currentMod.credits;
            break;
          }
        } 
    }

    // 2. Don't select more than the max number of credits worth modules per year
    credits_this_year = 0;
    // Add credits from required modules
    for(g = 0; g < required_modules_per_year[year].length; ++g) {
      for(item = 0; item < required_modules_per_year[year][g].length; ++item) {
        credits_this_year += required_modules_per_year[year][g][item].credits;
      }
    }
    // Add credits from selected modules
    for(g = 0; g < selected_ids[year].length; ++g) {
      for(item = 0; item < selected_ids[year][g].length; item++) {
        var findWithId = selected_ids[year][g][item];
        for(i = 0; i < optional_modules_per_year[year][g].uni_modules.length; ++i) {
          var currentMod = optional_modules_per_year[year][g].uni_modules[i];
          if(currentMod.id == findWithId) {
            credits_this_year += currentMod.credits;
            break;
          }
        } 
      }
    }

    // 3. Check this module has its requirements satisified
    requirementsSatisfied = checkPreReq(this_module, year, group);

    if(credits_used >= max_credits) {
      flashModal("You have already selected enough credits from this group", year);
      updateUI();
    }
    else if(credits_this_year + this_module.credits > js_course.year_structures[year].year_credits) {
      flashModal("You have enough credits this year", year);
      updateUI();
    }
    else if(!requirementsSatisfied) {
      flashModal("This module has prerequisites which you have not met", year);
      updateUI();
    } else {
      $("#optionsModalYear" + (year + 1)).modal('hide');
      if(credits_this_year + this_module.credits == js_course.year_structures[year].year_credits) {
        creditsComplete[year] = true;
      }
      if(credits_used + this_module.credits >= min_credits) {
        groupComplete[year][group] = true;
      } else {
        groupComplete[year][group] = false;
      }
      // Increment every tuple of the selected modules
      for(g = 0; g < selected_ids[year].length; ++g) {
        for(i = 0; i < selected_ids[year][g].length; ++i) {
          callIncrementLog(module_id, selected_ids[year][g][i]);
        }
      }
      selected_ids[year][group].push(this_module.id);
      updateUI();
    }
    
    //Tell the user they can now save again
    <% if logged_in? %>
    document.getElementById("save").innerHTML= "<span><i class=\"fa fa-star-o\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Save Pathway</span>";
    <% end %>
  }

  function checkPreReq(uni_module, year, group) {
    requirementsSatisfied = true;
    if(uni_module.uni_modules.length > 0) {
      for(module = 0; module < uni_module.uni_modules.length; module++) {
        requiredMod = uni_module.uni_modules[module];
        moduleTaken = false;
        // Check if this required module is already in the compulsory modules (for all years)
        moduleSearch1:
        for(y = 0; y < js_course.year_structures.length; y++) {
          for(g = 0; g < required_modules_per_year[y].length; ++g) {
            for(item = 0; item < required_modules_per_year[y][g].length; ++item) {
              currentMod = required_modules_per_year[y][g][item];
              if(requiredMod.id == currentMod.id) {
                moduleTaken = true;
                preReqMap[uni_module.id] = [year, group, currentMod.id];
                break moduleSearch1;
              }
            }
          }
        }
        if(moduleTaken) {
          continue; // If we have found the module at this point go to the next required module
        } else {
          // Check if this required module is in the selected modules (for all years)
          moduleSearch2:
          for(y = 0; y < js_course.year_structures.length; y++) {
            for(g = 0; g < optional_modules_per_year[y].length; ++g) {
              for(item = 0; item < selected_ids[y][g].length; ++item) {
                if(requiredMod.id == selected_ids[y][g][item]) {
                  moduleTaken = true;
                  preReqMap[uni_module.id] = [year, group, requiredMod.id];
                  break moduleSearch2;
                }
              }
            }
          }
          if(!moduleTaken) { // Module has not been found to be taken at this point
            requirementsSatisfied = false;
            break;
          }
        }
      }
    }
    return requirementsSatisfied;
  }

  // Remove a module from the selected array
  function deselectModule(year, group, moduleId, initial) {
    groupComplete[year][group] = false;
    indexToDelete = selected_ids[year][group].indexOf(moduleId);
    if(indexToDelete > -1) {
      selected_ids[year][group].splice(indexToDelete, 1);
    }
    if(initial) {
      // Remove modules which this was a prerequisite of.
      modulesRemoved = [];
    }
    for(var uni_module in preReqMap) {
      if(preReqMap.hasOwnProperty(uni_module)) {
        // If this module is a pre_req of a module
        if(moduleId == preReqMap[uni_module][2]) {
          modulesRemoved.push(uni_module);
          deselectYear = preReqMap[uni_module][0];
          deselectGroup =  preReqMap[uni_module][1];
          deselectId = uni_module;
          delete preReqMap[uni_module];
          modulesRemoved.concat(deselectModule(deselectYear, deselectGroup, parseInt(deselectId), false));
        }
      }
    }
    removed = "";
    for(i = 0; i < modulesRemoved.length; ++i) {
      for(j = 0; j < optional_modules_per_year[year][group].uni_modules.length; ++j) {
        var currentMod = optional_modules_per_year[year][group].uni_modules[j];
        if(currentMod.id == modulesRemoved[i]) {
          if(i == modulesRemoved.length - 1) {
            removed += currentMod.name;
          } else {
            removed += currentMod.name + ", ";
          }
          break;
        }
      }
    }
    // Decrement every tuple of the selected modules
    for(g = 0; g < selected_ids[year].length; ++g) {
      for(i = 0; i < selected_ids[year][g].length; ++i) {
        callDecrementLog(moduleId, selected_ids[year][g][i]);
      }
    }
    updateUI();
    if(removed != "" && initial) {
      flashTable("Module " + removed + " also removed as prerequisites are no longer satisified", year);
    }
    return modulesRemoved;
  }

  function callIncrementLog(firstMod, secondMod) {
    $.ajax({
      url: '<%= pathway_search_increment_pathway_search_log_path %>',
      type: 'POST',
      data: {
        first_mod_id: firstMod,
        second_mod_id: secondMod,
        course_id: <%= @course %>
      }
    });
  }

  function callDecrementLog(firstMod, secondMod) {
    $.ajax({
      url: '<%= pathway_search_decrement_pathway_search_log_path %>',
      type: 'POST',
      data: {
        first_mod_id: firstMod,
        second_mod_id: secondMod,
        course_id: <%= @course %>
      }
    });
  }

  function flashModal(message, year) {
    modalTarget = document.getElementById("optionsModalHeaderYear" + (year + 1));
    modalTarget.innerHTML = modalTarget.innerHTML + "<div class=\"row search-flash\">" +
         "<div class=\"col-md-12\">" +
            "<div class=\"flash-alert flash-alert-notice\">" +
               "<i class=\"fa fa-info\" aria-hidden=\"true\"></i>" +
               "<span>" + message + "</span>" +
            "</div>" +
         "</div>" +
   "</div>";
   fadeFlash();
  }

  function flashTable(message, year) {
    tableTarget = document.getElementById("div_year_" + (year + 1));
    tableTarget.innerHTML = "<div class=\"row search-flash\">" +
         "<div class=\"col-md-12\">" +
            "<div class=\"flash-alert flash-alert-notice\">" +
               "<i class=\"fa fa-info\" aria-hidden=\"true\"></i>" +
               "<span>" + message + "</span>" +
            "</div>" +
         "</div>" +
   "</div>" + tableTarget.innerHTML;
   fadeFlash();
  }

  function updateData(){
    // Go through each year structure
    for(year = 0; year < js_course.year_structures.length; ++year) {
      requiredGroupModules = [];
      optional_modules_this_year = [];
      // Sort the moduels for this year into compuslory and non-compulsory
      for(group= 0; group < js_course.year_structures[year].groups.length; ++group) {
        // If a group is marked as compulsory add its module to the required group modules array. If not add it to the optional array.
        currentGroup = js_course.year_structures[year].groups[group];
        if(currentGroup.compulsory) {
          requiredGroupModules = requiredGroupModules.concat(currentGroup.uni_modules);
          optional_modules_this_year.push([]);
        } else {
          optional_modules_this_year.push(currentGroup);
        }
      }
      // Sort required modules for this year based on their semester
      modules_year_long = [];
      modules_first_semester = [];
      modules_second_semester = [];
      modules_any_semester = [];
      required_modules_this_year = [];
      for(module = 0; module < requiredGroupModules.length; ++module){
        if (requiredGroupModules[module].semester == 3) modules_year_long.push(requiredGroupModules[module]);
        else if(requiredGroupModules[module].semester == 2) modules_second_semester.push(requiredGroupModules[module]);
        else if(requiredGroupModules[module].semester == 1) modules_first_semester.push(requiredGroupModules[module]);
        else modules_any_semester.push(requiredGroupModules[module]);
      }
      // Add the sorted array into array.
      required_modules_this_year.push(modules_any_semester); // Index 0: Any Semester
      required_modules_this_year.push(modules_first_semester); // Index 1: First Semester
      required_modules_this_year.push(modules_second_semester); // Index 2: Second Semester
      required_modules_this_year.push(modules_year_long); // Index 3: Both Semesters

      // Add the data for this year into the array for all years
      optional_modules_per_year.push(optional_modules_this_year);
      required_modules_per_year.push(required_modules_this_year);
    }

    if(<%=@year_of_study %> > divs.length) {
      document.getElementById('btn_all_years').click();
    } else {
      document.getElementById('btn_year_<%=@year_of_study%>').click();
    }
  }

  function fadeFlash(){
    setTimeout(fade_out, 5000);
       function fade_out() {
         $(".search-flash").fadeOut().empty();
         $(".search-flash").css("margin-bottom", "0px");
       }
   }
</script>